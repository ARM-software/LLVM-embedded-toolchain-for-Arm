diff --git a/meson.build b/meson.build
index 0fdfa0412..8e679f166 100644
--- a/meson.build
+++ b/meson.build
@@ -1224,6 +1224,18 @@ if get_option('newlib-retargetable-locking') != get_option('newlib-multithread')
   error('newlib-retargetable-locking and newlib-multithread must be set to the same value')
 endif
 
+conf_data.set('_GNU_SOURCE', '',
+        description: '''Enable GNU functions like strtof_l.
+It's necessary to set this globally because inline functions in
+libc++ headers call the GNU functions.'''
+)
+
+conf_data.set('_PICOLIBC_CTYPE_SMALL', '0',
+        description: '''Disable picolibc's small ctype implementation.
+libc++ expects newlib-style ctype tables, and also expects support for locales
+and extended character sets, so picolibc's small ctype is not compatible with it'''
+)
+
 conf_data.set('_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL',
 	      cc.has_argument('-fno-tree-loop-distribute-patterns'),
 	      description: 'Compiler flag to prevent detecting memcpy/memset patterns')
diff --git a/picolibc.ld.in b/picolibc.ld.in
index b97ea3300..04b94f35c 100644
--- a/picolibc.ld.in
+++ b/picolibc.ld.in
@@ -68,6 +68,9 @@ SECTIONS
 		*(.text.unlikely .text.unlikely.*)
 		*(.text.startup .text.startup.*)
 		*(.text .text.* .opd .opd.*)
+		PROVIDE (__start___lcxx_override = .);
+		*(__lcxx_override)
+		PROVIDE (__stop___lcxx_override = .);
 		*(.gnu.linkonce.t.*)
 		KEEP (*(.fini .fini.*))
 		@PREFIX@__text_end = .;
diff --git a/test/test-fgets-eof.c b/test/test-fgets-eof.c
index 4c9e141b7..704e1a3ac 100644
--- a/test/test-fgets-eof.c
+++ b/test/test-fgets-eof.c
@@ -36,6 +36,10 @@
 #include <stdio.h>
 #include <string.h>
 
+#ifndef TEST_FILE_NAME
+#define TEST_FILE_NAME "FGETSEOF.TXT"
+#endif
+
 const char *string = "123456789";
 
 int main(void)
@@ -46,12 +50,12 @@ int main(void)
     FILE *file;
     int ret = 0;
 
-    file = fopen("testfile.dat", "w");
+    file = fopen( TEST_FILE_NAME, "w" );
     if(file == NULL) return 1;
     fputs(string, file);
     fclose(file);
 
-    file = fopen( "testfile.dat", "r" );
+    file = fopen( TEST_FILE_NAME, "r" );
     if(file == NULL) return 1;
 
     /*Calling fgets to reach EOF and check on the returned value*/
diff --git a/test/test-ungetc-ftell.c b/test/test-ungetc-ftell.c
index 245679814..a3e702312 100644
--- a/test/test-ungetc-ftell.c
+++ b/test/test-ungetc-ftell.c
@@ -36,6 +36,10 @@
 #include <stdio.h>
 #include <string.h>
 
+#ifndef TEST_FILE_NAME
+#define TEST_FILE_NAME "UNGETCFTELL.DAT"
+#endif
+
 const char *str = "This is a string";
 
 int main(void) {
@@ -44,12 +48,12 @@ int main(void) {
     char first;
     long position, start;
 
-    file = fopen( "testfile.dat", "wb" );
+    file = fopen( TEST_FILE_NAME, "wb" );
     if( file == NULL ) return 1;
     fputs(str, file);
     fclose(file);
 
-    file = fopen( "testfile.dat", "rb" );
+    file = fopen( TEST_FILE_NAME, "rb" );
     if(file == NULL) return 1;
 
     first = fgetc(file);
